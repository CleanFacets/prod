
* Toolchain:

The focus is on getting the new toolchain verified.  As such this repo is
intended to be tested using new toolchain (mspgcc 4.4.5, uniarch, ti headers).

Some testing with the old 3.2.3 toolchain (original tinyos and z1 varient) has
also been done for simple function (ie. does it compile).


* Repo Structure

The msp430.git repo is located at: 

git clone ssh://hinrg.cs.jhu.edu/home/cire/msp430.git  (r/w)
git clone git://hinrg.cs.jhu.edu/git/cire/msp430.git   (read-only)

The msp430.git repo on hinrg belongs to group cire-git.  Users needing
repo write access need to belong to the cire-git group.

The msp430.git repo tracks the hinrg t2 git repo which in turn imports from the
main svn T2 trunk.


svn t2 mainline ---|
		   | hourly
		   |
		   v         (git)
------------------ hinrg t2 -----------------------

           master
             |
             |
              - master_vhsb
                      |
                      |
	  	       ------ mm-z1
		            |
			    |
		             --- mm-z1-next
			         |
				 |
				  --- mm-z1-pu

master: is the main branch coming from the svn t2 mainline.  Updated manually.

master-vhsb: (vogon hyper-spatial bypass)  Bypass the Z1 commits on the main
	trunk.  This branch tracks master but has the superfluous Z1 commit
	removed as it conflicts with the collapsed msp430 x2xxx work done in
	mm_core.  This collapsage forms the majority of the work of merging
	the trees and there isn't much sense in reinventing the wheel.

mm-z1: main consolidation branch for the mm-z1 integration.   It represents the
	current released version of the branch.

mm-z1-next: As changes get accepted they get brought back into -next.    When
	all is good, next gets integrated into mm-z1.

mm-z1-pu: proposed updates.   After new code has been worked on for a bit and
	is ready to be integrated with other code in the mm-z1 area, mm-z1-pu
	is the place to put it.  Some code from pu will go into next.  When
	enough stuff is ready to go in next, it is brought over to main
	(mm-z1).

x5:	integrate x5xxx family into result of mm-z1.  Includes all three major
x5-next families, x1, x2, and x5.  Uses seperate dirs for major differences.
x5-pu


To pull a working branch based on the mm-z1-pu branch (a reasonable place to
fork a working branch), do the following:

    cd ~/mm							# make sure at top level, we call it mm
    git clone git://hinrg.cs.jhu.edu/git/cire/msp430.git	# grab from ro place
    cd msp430
    git config --add push.default matching	# make sure only existing branches get pushed.
						# only effects rw repos
    git checkout -t origin/mm-z1-pu		# start with proposed updates, tracking branch
    git checkout -b work			# local working branch


To start with a read-write copy of the repo replace the clone with:

    git clone ssh://hinrg.cs.jhu.edu/home/cire/msp430.git	# grab from ro place

You need to have a login on hinrg and belong to group cire-git.
